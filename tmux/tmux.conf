# Allows adoption of conda config as defined in fish config
# set -g default-command "$SHELL"

# change prefix to Ctrl-A
unbind C-b
set-option -g prefix C-a
bind C-a send-prefix

# Simplifying editing and loading of config
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded"
bind C-e split-window -h "nvim ~/.config/tmux/tmux.conf"
bind e split-window -h "nvim ~/.config/tmux/tmux.conf"

# let <esc> trigger instantly..? 
set -sg escape-time 0

# Set vim motion in z.B. tmux help
setw -g mode-keys vi

# Enable mouse control
setw -g mouse

######### copy mode : vim ##############
# set vi mode for copy mode
setw -g mode-keys vi

# enter copy mode using 'Esc'
unbind [
bind Escape copy-mode

# select with v, yank with y, (switch between block with C-v)
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel
bind -T copy-mode-vi i send -X select-word
# TODO: Configure command based on host
set -g copy-command "pbcopy"

bind P paste-buffer
bind -T copy-mode-vi Escape send q

# history
set -g history-limit 4096
########################################

######## BEGIN PANES ##########
set -g base-index 1
set -g pane-base-index 1

# Switch panes with vim motion
bind h select-pane -L
bind l select-pane -R
bind j select-pane -U
bind k select-pane -D

# Split with intuitive keys
bind | split-window -h
bind _ split-window -v -f
bind - split-window -v
bind + split-window -h -f
unbind '"'
unbind %

# Resize panes
bind C-l resize-pane -R 5
bind C-h resize-pane -L 5
bind C-k resize-pane -U 5
bind C-j resize-pane -D 5

# Balance panes
bind V resize-pane -y 50%
bind W resize-pane -x 50%

# Make active more obvious
set -g pane-active-border-style "fg=#ff69B4 reverse"
set -g pane-border-style "fg=#ff69B4"

# Fun colors
set -g status-style "bg=#000000 fg=#ff69B4 bright dashed-underscore reverse"

# Resize window after text resize z.B.
bind a resize-window -a
bind A resize-window -A
########## END PANES ###########

######################################################
################ TMUX-VIM Navigator ##################
######################################################
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# ---- ALTERNATE IMPLEMENTATION
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# # Jump to previous pane
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Allow nvim to react to focus switching from tmux pane
set -g focus-events on
######################################################
######################################################

###### SESSION MANAGEMENT ######
# Handle switching between sessions
bind C-p switch-client -p
bind C-n switch-client -n

# Use tmux-sessionizer
bind C-t display-popup -E "tms switch"
bind C-f display-popup -E "tms"
################################
